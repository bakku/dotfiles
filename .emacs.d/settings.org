#+TITLE: Emacs Configuration

* Package configuration
  
** Evil
   
   Enable evil mode

   #+BEGIN_SRC emacs-lisp
   (evil-mode 1)
   #+END_SRC

** Ivy/Counsel
   
   Enable ivy/counsel

   #+BEGIN_SRC emacs-lisp
   (ivy-mode 1)
   #+END_SRC

   Override standard emacs commands using the ones counsel offers

   #+BEGIN_SRC emacs-lisp
   (global-set-key (kbd "M-x") 'counsel-M-x)
   (global-set-key (kbd "C-x C-f") 'counsel-find-file)
   #+END_SRC

** Org mode

   Beautify bullets

   #+BEGIN_SRC emacs-lisp
   (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
   #+END_SRC

   Do not show // or ** for italic and bold
   
   #+BEGIN_SRC emacs-lisp
   (setq org-hide-emphasis-markers t)
   #+END_SRC

   Customize todo keyword sequences

   #+BEGIN_SRC emacs-lisp
   (setq org-todo-keywords
         '((sequence "PLANNED" "OPEN" "IN PROGRESS" "IN REVIEW" "DONE")))
   #+END_SRC

   Log the time when a task is set to done

   #+BEGIN_SRC emacs-lisp
   (setq org-log-done 'time)
   #+END_SRC

   Set directories for org

   #+BEGIN_SRC emacs-lisp
   (setq org-directory "/Volumes/NO NAME/org")
   (setq org-agenda-files (list "/Volumes/NO NAME/org/TODO.org"))
   #+END_SRC
   
   Customize colors of org mode

   #+BEGIN_SRC emacs-lisp
   (setq org-todo-keyword-faces
         '(("PLANNED" . (:foreground "dark gray" :weight bold))
   	   ("OPEN" . (:foreground "turquoise" :weight bold))
   	   ("IN PROGRESS" . (:foreground "LightPink1" :weight bold))
   	   ("IN REVIEW" . (:foreground "IndianRed1" :weight bold))
   	   ("DONE" . (:foreground "DarkOliveGreen1" :weight bold))))
   #+END_SRC

** Which key

   Get all possible combinations when pressing a prefix key

   #+BEGIN_SRC emacs-lisp
   (which-key-mode 1)
   #+END_SRC

** Smex

   Order M-x commands according to their latest usage

   #+BEGIN_SRC emacs-lisp
   (smex-initialize)
   #+END_SRC

** Key chord
   
   To create some key combinations

   #+BEGIN_SRC emacs-lisp
   (key-chord-mode 1)
   #+END_SRC

* Emacs visual appearance
  
** General

   Don't show standard startup screen

   #+BEGIN_SRC emacs-lisp
   (setq inhibit-startup-screen t)
   #+END_SRC

   Hide the toolbar and scrollbar of emacs
   
   #+BEGIN_SRC emacs-lisp
   (tool-bar-mode -1)
   (scroll-bar-mode -1)
   #+END_SRC

** Editor

   Show line numbers

   #+BEGIN_SRC emacs-lisp
   (global-display-line-numbers-mode 1)
   #+END_SRC
   
   Highlight current line

   #+BEGIN_SRC emacs-lisp
   (global-hl-line-mode 1)
   #+END_SRC

   Use Monaco for MacOS

   #+BEGIN_SRC emacs-lisp
   (cond
    ((string-equal system-type "darwin")
     (when (member "Monaco" (font-family-list))
       (set-frame-font "Monaco-18" t t))))
   #+END_SRC
   
   Highlight matching parenthesis

   #+BEGIN_SRC emacs-lisp
   (setq show-paren-style 'parenthesis)
   (show-paren-mode 1)
   #+END_SRC

   Cursor should not blink at all
   
   #+BEGIN_SRC emacs-lisp
   (blink-cursor-mode 0)
   #+END_SRC

** Theme

   Use gruvbox dark as standard

   #+BEGIN_SRC emacs-lisp
   (load-theme 'gruvbox-dark-soft t)
   #+END_SRC
  
* Emacs behaviour

  Do not create backup files

  #+BEGIN_SRC emacs-lisp
  (setq-default backup-inhibited t)
  #+END_SRC
  
  Ask for confirmation before killing emacs

  #+BEGIN_SRC emacs-lisp
  (setq confirm-kill-emacs (lambda (prompt) (y-or-n-p "Really want to exit? ")))
  #+END_SRC
  
  Start with maximized frame

  #+BEGIN_SRC emacs-lisp
  (toggle-frame-maximized)
  #+END_SRC
  
* Custom commands
  
  Quickly switch to previous buffer

  #+BEGIN_SRC emacs-lisp
  (defun switch-to-previous-buffer ()
    "Switch to previously open buffer. Repeated invocations toggle between the two most recently open buffers."
    (interactive)
    (switch-to-buffer (other-buffer (current-buffer) 1)))
  #+END_SRC

  Open frequently used directories in dired

  #+BEGIN_SRC emacs-lisp
  (defun open-org-directory ()
    "Open org directory in dired"
    (interactive)
    (dired org-directory))
  
  (defun open-emacs-home ()
    "Open emacs home in dired"
    (interactive)
    (dired user-emacs-directory))
  #+END_SRC

  Quickly switch between light and dark themes

  #+BEGIN_SRC emacs-lisp
  (defun switch-light-theme ()
    (interactive)
    (load-theme 'gruvbox-light-hard))
  
  (defun switch-dark-theme ()
    (interactive)
    (load-theme 'gruvbox-dark-soft))
  #+END_SRC
  
  Insert a source code block in org mode

  #+BEGIN_SRC emacs-lisp
  (defun org-insert-src-block (src-code-type)
    (interactive "sLanguage: ")
    (progn
      (insert (format "#+BEGIN_SRC %s\n" src-code-type))
      (newline-and-indent)
      (insert "#+END_SRC")
      (newline-and-indent)
      (previous-line 2)))
  #+END_SRC

* Keybindings

  Map meta to cmd on MacOS

  #+BEGIN_SRC emacs-lisp
  (cond
   ((string-equal system-type "darwin")
    (setq mac-command-modifier 'meta
  	mac-option-modifier 'none
  	default-input-method "MacOSX")))
  #+END_SRC

  Use jk instead of ESC in evil mode

  #+BEGIN_SRC emacs-lisp
  (key-chord-define evil-insert-state-map "jk" 'evil-normal-state)
  #+END_SRC

  C-c b for quickly switching to the previous buffer

  #+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-c b") #'switch-to-previous-buffer)
  #+END_SRC
  
  Insert code in org mode

  #+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook
            '(lambda ()
	       (local-set-key (kbd "C-c i c") #'org-insert-src-block)))
  #+END_SRC
